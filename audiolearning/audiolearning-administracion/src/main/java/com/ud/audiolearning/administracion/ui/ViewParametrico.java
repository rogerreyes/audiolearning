package com.ud.audiolearning.administracion.ui;

import java.util.function.Consumer;

import org.springframework.beans.factory.annotation.Autowired;

import com.ud.audiolearning.api.domain.Parametrico;
import com.ud.audiolearning.api.service.ApiService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.util.BeanItem;
import com.vaadin.server.FontAwesome;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.ValoTheme;

@SuppressWarnings("serial")
public class ViewParametrico extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private Button b_editarParametrico;
	@AutoGenerated
	private Button b_crearParametrico;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private ComboBox cb_tipo;
	@AutoGenerated
	private Label label_5;
	@AutoGenerated
	private TextField tf_nombre;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private TextField tf_codigo;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Label l_titulo;
	@Autowired
	ApiService apiService;
	private FieldGroup binder;
	private BeanItem<Parametrico> beanParametrico;
	private Parametrico parametrico;
	private String tipoParametrico;

	public ViewParametrico(String tipo, ApiService apiService, Parametrico parametrico, Consumer<String> consumer) {
		this.apiService = apiService;
		this.parametrico = parametrico;
		this.tipoParametrico = tipo;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		
		if(this.parametrico==null){
			b_editarParametrico.setVisible(false);
			b_crearParametrico.setVisible(true);
			
		}else{
			b_editarParametrico.setVisible(true);
			b_crearParametrico.setVisible(false);
		}
		

		init();
		style();
		b_crearParametrico.addClickListener(e -> crearParametrico(consumer));
		b_editarParametrico.addClickListener(e -> editarParametrico(consumer));
		
		

	}

	private void editarParametrico(Consumer<String> consumer) {

		try {
			validarFormulario();
			binder.commit();
			apiService.editarParametrico(this.parametrico);
			consumer.accept(null);
			Notification n = new Notification("Correcto!", "Se ha editado con exito el registro",
					Type.HUMANIZED_MESSAGE);
			n.setDelayMsec(3600);
			n.show(UI.getCurrent().getPage());
			UI.getCurrent().getWindows().forEach(window -> window.close());

		} catch (CommitException e) {
			Notification.show("Error de Validacion", "verifique los campos del formulario", Type.WARNING_MESSAGE);
			
		}

	}

	private void crearParametrico(Consumer<String> consumer) {

		try {
			validarFormulario();
			binder.commit();
			apiService.crearParametrico(this.parametrico);
			consumer.accept(null);

			Notification n = new Notification("Correcto!", "Se ha creado con exito el registro",
					Type.HUMANIZED_MESSAGE);
			n.setDelayMsec(3600);
			n.show(UI.getCurrent().getPage());
			UI.getCurrent().getWindows().forEach(window -> window.close());

			
		} catch (CommitException e) {
			Notification.show("Error de Validacion", "verifique los campos del formulario", Type.WARNING_MESSAGE);
			
		}

	}

	private void validarFormulario() {

		tf_codigo.setRequired(true);
		tf_codigo.setRequiredError("Requerido");

		tf_nombre.setRequired(true);
		tf_nombre.setRequiredError("Requerido");

		cb_tipo.setRequired(true);
		cb_tipo.setRequiredError("Requerido");

	}

	private void init() {

		binder = new FieldGroup();

		String accion = this.parametrico==null?"Agregar":"Editar";
		if (this.parametrico == null) {
			parametrico = new Parametrico();
		}

		beanParametrico = new BeanItem<Parametrico>(this.parametrico);
		binder.setItemDataSource(beanParametrico);

		iniciarImputs();

		binder.bind(tf_codigo, "codigo");
		binder.bind(tf_nombre, "nombre");
		binder.bind(cb_tipo, "tipo");

		cb_tipo.setEnabled(false);
		cb_tipo.select(this.tipoParametrico);
		
		if(accion.equals("Editar")){
			
			tf_codigo.setEnabled(false);
		}
		 
		
		switch (this.tipoParametrico) {
		case "IDIOMA":
			l_titulo.setValue(accion+" Idioma");
			break;

		case "GENERO":
			l_titulo.setValue(accion+" Genero");

			break;
		case "TIPODENUNCIA":
			l_titulo.setValue(accion+" Tipo Denuncia");

			break;
		case "PAIS":
			l_titulo.setValue(accion+" Pais");
			break;
		}

		
	}

	private void iniciarImputs() {

		Embedded imagen = new Embedded();
		imagen.setHeight("128px");
		imagen.setWidth("128px");
		imagen.setSource(new ThemeResource("img/gear-icon.png"));
		horizontalLayout_2.addComponent(imagen, 0);
		horizontalLayout_2.setComponentAlignment(imagen, Alignment.MIDDLE_CENTER);

		cb_tipo.addItem("IDIOMA");
		cb_tipo.setItemCaption("IDIOMA", "Idioma");
		cb_tipo.addItem("GENERO");
		cb_tipo.setItemCaption("GENERO", "Genero");
		cb_tipo.addItem("TIPODENUNCIA");
		cb_tipo.setItemCaption("TIPODENUNCIA", "Tipo de Denuncia");
		cb_tipo.addItem("PAIS");
		cb_tipo.setItemCaption("PAIS", "Pais");
		cb_tipo.setNullSelectionAllowed(false);

		tf_codigo.setNullRepresentation("");
		tf_nombre.setNullRepresentation("");

	}

	private void style() {

		b_crearParametrico.addStyleName(ValoTheme.BUTTON_FRIENDLY);
		b_crearParametrico.setIcon(FontAwesome.SAVE);
		b_editarParametrico.addStyleName(ValoTheme.BUTTON_PRIMARY);
		b_editarParametrico.setIcon(FontAwesome.EDIT);

		l_titulo.addStyleName(ValoTheme.LABEL_H2);
		l_titulo.addStyleName(ValoTheme.LABEL_COLORED);
		l_titulo.addStyleName(ValoTheme.LABEL_BOLD);
		l_titulo.addStyleName("mih2");

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// l_titulo
		l_titulo = new Label();
		l_titulo.setImmediate(false);
		l_titulo.setWidth("100.0%");
		l_titulo.setHeight("-1px");
		l_titulo.setValue("Label");
		mainLayout.addComponent(l_titulo);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		horizontalLayout_2.addComponent(verticalLayout_1);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("-1px");
		verticalLayout_1.setHeight("-1px");
		verticalLayout_1.setMargin(false);
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_1.addComponent(gridLayout_1);
		
		// b_crearParametrico
		b_crearParametrico = new Button();
		b_crearParametrico.setCaption("Crear");
		b_crearParametrico.setImmediate(true);
		b_crearParametrico.setWidth("-1px");
		b_crearParametrico.setHeight("-1px");
		verticalLayout_1.addComponent(b_crearParametrico);
		verticalLayout_1.setComponentAlignment(b_crearParametrico, new Alignment(48));
		
		// b_editarParametrico
		b_editarParametrico = new Button();
		b_editarParametrico.setCaption("Editar");
		b_editarParametrico.setImmediate(true);
		b_editarParametrico.setWidth("-1px");
		b_editarParametrico.setHeight("-1px");
		verticalLayout_1.addComponent(b_editarParametrico);
		verticalLayout_1.setComponentAlignment(b_editarParametrico, new Alignment(48));
		
		return verticalLayout_1;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("-1px");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(2);
		gridLayout_1.setRows(3);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Codigo");
		gridLayout_1.addComponent(label_2, 0, 0);
		
		// tf_codigo
		tf_codigo = new TextField();
		tf_codigo.setImmediate(false);
		tf_codigo.setWidth("250px");
		tf_codigo.setHeight("-1px");
		gridLayout_1.addComponent(tf_codigo, 1, 0);
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Nombre");
		gridLayout_1.addComponent(label_3, 0, 1);
		
		// tf_nombre
		tf_nombre = new TextField();
		tf_nombre.setImmediate(false);
		tf_nombre.setWidth("250px");
		tf_nombre.setHeight("-1px");
		gridLayout_1.addComponent(tf_nombre, 1, 1);
		
		// label_5
		label_5 = new Label();
		label_5.setImmediate(false);
		label_5.setWidth("-1px");
		label_5.setHeight("-1px");
		label_5.setValue("Tipo");
		gridLayout_1.addComponent(label_5, 0, 2);
		
		// cb_tipo
		cb_tipo = new ComboBox();
		cb_tipo.setImmediate(true);
		cb_tipo.setWidth("-1px");
		cb_tipo.setHeight("-1px");
		gridLayout_1.addComponent(cb_tipo, 1, 2);
		
		return gridLayout_1;
	}

}
