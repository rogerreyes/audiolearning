package com.ud.audiolearning.reproductor.ui;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;

import org.springframework.beans.factory.annotation.Autowired;
import org.vaadin.teemu.VaadinIcons;

import com.mongodb.gridfs.GridFSDBFile;
import com.ud.audiolearning.api.anotaciones.UIComponent;
import com.ud.audiolearning.api.interfaces.AudioLearnUI;
import com.ud.audiolearning.api.domain.Categoria;
import com.ud.audiolearning.reproductor.service.ReproductorService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.ErrorHandler;
import com.vaadin.server.FileDownloader;
import com.vaadin.server.StreamResource;
import com.vaadin.server.StreamResource.StreamSource;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Audio;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.ValoTheme;

import ru.xpoft.vaadin.VaadinView;

@SuppressWarnings("serial")
@UIComponent
@VaadinView("reproductor")
public class Reproductor extends CustomComponent implements View {
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout vl_Comentarios;
	@AutoGenerated
	private Table table_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button b_addComentario;
	@AutoGenerated
	private TextArea ta_Comentario;
	@AutoGenerated
	private Label l_comentarios;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private VerticalLayout vl_descripcionAudio;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private Label l_descripcion;
	@AutoGenerated
	private Label t_descripcion;
	@AutoGenerated
	private Label l_duracion;
	@AutoGenerated
	private Label t_duracion;
	@AutoGenerated
	private Label l_archivo;
	@AutoGenerated
	private Label t_archivo;
	@AutoGenerated
	private Label l_idioma;
	@AutoGenerated
	private Label t_idioma;
	@AutoGenerated
	private Label l_categoria;
	@AutoGenerated
	private Label t_categorias;
	@AutoGenerated
	private Label l_fecha_publica;
	@AutoGenerated
	private Label t_fecha_publica;
	@AutoGenerated
	private Label l_autor;
	@AutoGenerated
	private Label t_autor;
	@AutoGenerated
	private Label l_titulo;
	@AutoGenerated
	private VerticalLayout vl_reproductor;
	@AutoGenerated
	private Embedded embedded_1;
	private Audio reproductor;
	SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd hh:mm");

	@Autowired
	ReproductorService reproductorService;
	private HorizontalLayout hl_botones;
	private Button b_descargar;
	private Button b_favoritos;
	private Button b_denunciar;
	private Button b_calificar;
	private com.ud.audiolearning.api.domain.Audio audioDB;

	public Reproductor() {
	}

	@Override
	public void enter(ViewChangeEvent event) {
		AudioLearnUI audioLearning = (AudioLearnUI) UI.getCurrent();
		audioLearning.getPrivateUI().getAreaContenido().setHeight("-1px");
		buildMainLayout();
		setCompositionRoot(mainLayout);
		init(event.getParameters());
		style();

	}

	public void init(String id) {

		hl_botones = new HorizontalLayout();
		hl_botones.addStyleName("botonesMultimedia");
		hl_botones.setSpacing(true);
		hl_botones.setMargin(true);
		hl_botones.setWidth("-1px");

		this.b_denunciar = new Button();
		this.b_descargar = new Button();
		this.b_favoritos = new Button();
		this.b_calificar = new Button("Califica este Contenido");

		
		

		gridLayout_1.setColumnExpandRatio(1, 1.0f);

		 audioDB = reproductorService.buscarAudio(id);
		reproductor = new Audio();

		if (audioDB == null) {
			Notification.show("Error!", "No se pudo consultar la informacion del Audio", Type.ERROR_MESSAGE);
			return;
		}
		
		this.b_calificar.addClickListener(e -> calificarContenido());
		this.b_denunciar.addClickListener(e -> denunciarContenido());

		if (!audioDB.getEstado().equals("A")) {

			Notification.show("Aviso", "El audio esta inactivo", Type.ERROR_MESSAGE);
			return;
		}

	
	

		hl_botones.addComponents(b_denunciar, b_descargar, b_favoritos);

		vl_reproductor.addComponents(reproductor, hl_botones, this.b_calificar);
		vl_reproductor.setComponentAlignment(hl_botones, Alignment.MIDDLE_CENTER);

		llenarInfoAudio(audioDB);

		GridFSDBFile audioFile = reproductorService.buscarAudioFile(audioDB);

		if (audioFile != null) {

			StreamResource sr2 = new StreamResource(new StreamSource() {
				@Override
				public InputStream getStream() {
					return new BufferedInputStream(audioFile.getInputStream());
				}
			}, audioFile.getFilename());

			reproductor.setSource(sr2);

			 FileDownloader fileDownloader = new FileDownloader(sr2);
		     fileDownloader.extend(b_descargar);
		     fileDownloader.setErrorHandler(new ErrorHandler() {
					
					
					@Override
					public void error(com.vaadin.server.ErrorEvent event) {
					System.err.println("Archivo para guardar null");
						
					}
				});
		        
			reproductor.setErrorHandler(new ErrorHandler() {
				@Override
				public void error(com.vaadin.server.ErrorEvent event) {
					System.err.println("Reproductor handler!");

				}

			});

			if (audioDB.getImagen().getBinaryData() != null) {

				embedded_1.setSource(new StreamResource(new StreamSource() {

					@Override
					public InputStream getStream() {
						return new ByteArrayInputStream(audioDB.getImagen().getBinaryData().getData());
					}
				}, audioDB.getImagen().getNombre()));
			} else {

				embedded_1.setSource(new ThemeResource("img/component/embedded_icon.png"));
			}

			reproductorService.agregarHistorico(audioDB);

		} else {

			Notification.show("No hay Audio");
		}

		l_archivo.setValue(audioFile.getFilename());

	}

	private void denunciarContenido() {
		
		Window w = new Window("Reporte de contenido");
		com.ud.audiolearning.api.domain.Audio audioDenuncia = new com.ud.audiolearning.api.domain.Audio();
		
		audioDenuncia.setId(this.audioDB.getId());
		audioDenuncia.setTitulo(this.audioDB.getTitulo());
		
		w.setContent(new ViewDenuncia(this.reproductorService, audioDenuncia ));
		w.setModal(true);
		w.center();
		w.setWidth("-1");
		w.setHeight("-1px");
		UI.getCurrent().addWindow(w);
	}

	public void calificarContenido() {

		Window w = new Window("Calificacion de contenido");
		w.setContent(new ViewCalificacion());
		w.setModal(true);
		w.center();
		w.setWidth("800px");
		w.setHeight("-1px");
		UI.getCurrent().addWindow(w);

	}

	private void llenarInfoAudio(com.ud.audiolearning.api.domain.Audio audio) {
		// l_duracion.setValue(audio.get);
		l_autor.setValue(audio.getUsuario().getNombres() + " " + audio.getUsuario().getApellidos());
		l_fecha_publica.setValue(dateFormat.format(audio.getFechaCreacion()));
		String categorias = "";
		for (Categoria cat : audio.getCategorias()) {
			categorias = categorias + cat.getNombre() + "  ";
		}
		l_categoria.setValue(categorias);
		l_descripcion.setValue(audio.getDescripcion());
		l_idioma.setValue(audio.getIdioma());
		l_titulo.setValue(audio.getTitulo());

	}

	private void style() {
		reproductor.setWidth(250f, Unit.PIXELS);
		vl_reproductor.setId("vl_audio");
		mainLayout.setMargin(new MarginInfo(false, true, true, true));
		l_titulo.setStyleName(ValoTheme.LABEL_H2);
		l_titulo.addStyleName(ValoTheme.LABEL_COLORED);
		l_titulo.addStyleName(ValoTheme.LABEL_BOLD);
		l_titulo.addStyleName("mih2");
		
		t_categorias.addStyleName(ValoTheme.LABEL_COLORED);
		t_descripcion.addStyleName(ValoTheme.LABEL_COLORED);
		t_duracion.addStyleName(ValoTheme.LABEL_COLORED);
		t_autor.addStyleName(ValoTheme.LABEL_COLORED);
		t_fecha_publica.addStyleName(ValoTheme.LABEL_COLORED);
		t_archivo.addStyleName(ValoTheme.LABEL_COLORED);
		t_idioma.addStyleName(ValoTheme.LABEL_COLORED);
		l_comentarios.setStyleName(ValoTheme.LABEL_H2);
		l_comentarios.addStyleName(ValoTheme.LABEL_COLORED);
		l_comentarios.addStyleName(ValoTheme.LABEL_BOLD);
		l_comentarios.addStyleName("tituloComentarios");

		t_archivo.addStyleName(ValoTheme.LABEL_H4);
		t_autor.addStyleName(ValoTheme.LABEL_H4);
		t_categorias.addStyleName(ValoTheme.LABEL_H4);
		t_descripcion.addStyleName(ValoTheme.LABEL_H4);
		t_duracion.addStyleName(ValoTheme.LABEL_H4);
		t_descripcion.addStyleName(ValoTheme.LABEL_H4);
		t_archivo.addStyleName(ValoTheme.LABEL_H4);
		t_idioma.addStyleName(ValoTheme.LABEL_H4);
		t_fecha_publica.addStyleName(ValoTheme.LABEL_H4);

		vl_descripcionAudio.setMargin(new MarginInfo(false, true, false, true));

		b_denunciar.setIcon(VaadinIcons.BUG);
		b_descargar.setIcon(VaadinIcons.CLOUD_DOWNLOAD_O);
		b_favoritos.setIcon(VaadinIcons.HEART);
		b_addComentario.addStyleName(ValoTheme.BUTTON_PRIMARY);

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		
		// l_comentarios
		l_comentarios = new Label();
		l_comentarios.setImmediate(false);
		l_comentarios.setWidth("100.0%");
		l_comentarios.setHeight("-1px");
		l_comentarios.setValue("Comentarios");
		mainLayout.addComponent(l_comentarios);
		
		// vl_Comentarios
		vl_Comentarios = buildVl_Comentarios();
		mainLayout.addComponent(vl_Comentarios);
		mainLayout.setExpandRatio(vl_Comentarios, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(true);
		horizontalLayout_2.setSpacing(true);
		
		// vl_reproductor
		vl_reproductor = buildVl_reproductor();
		horizontalLayout_2.addComponent(vl_reproductor);
		
		// vl_descripcionAudio
		vl_descripcionAudio = buildVl_descripcionAudio();
		horizontalLayout_2.addComponent(vl_descripcionAudio);
		horizontalLayout_2.setExpandRatio(vl_descripcionAudio, 1.0f);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVl_reproductor() {
		// common part: create layout
		vl_reproductor = new VerticalLayout();
		vl_reproductor.setStyleName("areaReproductor");
		vl_reproductor.setImmediate(false);
		vl_reproductor.setWidth("-1px");
		vl_reproductor.setHeight("-1px");
		vl_reproductor.setMargin(false);
		
		// embedded_1
		embedded_1 = new Embedded();
		embedded_1.setImmediate(false);
		embedded_1.setWidth("250px");
		embedded_1.setHeight("250px");
		embedded_1.setSource(new ThemeResource("img/component/embedded_icon.png"));
		embedded_1.setType(1);
		embedded_1.setMimeType("image/png");
		vl_reproductor.addComponent(embedded_1);
		
		return vl_reproductor;
	}

	@AutoGenerated
	private VerticalLayout buildVl_descripcionAudio() {
		// common part: create layout
		vl_descripcionAudio = new VerticalLayout();
		vl_descripcionAudio.setStyleName("vl_infoAudio");
		vl_descripcionAudio.setImmediate(false);
		vl_descripcionAudio.setWidth("100.0%");
		vl_descripcionAudio.setHeight("-1px");
		vl_descripcionAudio.setMargin(false);
		vl_descripcionAudio.setSpacing(true);
		
		// l_titulo
		l_titulo = new Label();
		l_titulo.setImmediate(false);
		l_titulo.setWidth("100.0%");
		l_titulo.setHeight("-1px");
		l_titulo.setValue("TITULO");
		vl_descripcionAudio.addComponent(l_titulo);
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		vl_descripcionAudio.addComponent(gridLayout_1);
		
		return vl_descripcionAudio;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setColumns(2);
		gridLayout_1.setRows(7);
		
		// t_autor
		t_autor = new Label();
		t_autor.setImmediate(false);
		t_autor.setWidth("-1px");
		t_autor.setHeight("-1px");
		t_autor.setValue("Autor: ");
		gridLayout_1.addComponent(t_autor, 0, 0);
		
		// l_autor
		l_autor = new Label();
		l_autor.setImmediate(false);
		l_autor.setWidth("100.0%");
		l_autor.setHeight("100.0%");
		l_autor.setValue("---");
		gridLayout_1.addComponent(l_autor, 1, 0);
		gridLayout_1.setComponentAlignment(l_autor, new Alignment(33));
		
		// t_fecha_publica
		t_fecha_publica = new Label();
		t_fecha_publica.setImmediate(false);
		t_fecha_publica.setWidth("-1px");
		t_fecha_publica.setHeight("-1px");
		t_fecha_publica.setValue("Publicado:");
		gridLayout_1.addComponent(t_fecha_publica, 0, 1);
		
		// l_fecha_publica
		l_fecha_publica = new Label();
		l_fecha_publica.setImmediate(false);
		l_fecha_publica.setWidth("100.0%");
		l_fecha_publica.setHeight("100.0%");
		l_fecha_publica.setValue("---");
		gridLayout_1.addComponent(l_fecha_publica, 1, 1);
		
		// t_categorias
		t_categorias = new Label();
		t_categorias.setImmediate(false);
		t_categorias.setWidth("-1px");
		t_categorias.setHeight("-1px");
		t_categorias.setValue("Categorias:");
		gridLayout_1.addComponent(t_categorias, 0, 2);
		
		// l_categoria
		l_categoria = new Label();
		l_categoria.setImmediate(false);
		l_categoria.setWidth("100.0%");
		l_categoria.setHeight("-1px");
		l_categoria.setValue("---");
		gridLayout_1.addComponent(l_categoria, 1, 2);
		
		// t_idioma
		t_idioma = new Label();
		t_idioma.setImmediate(false);
		t_idioma.setWidth("-1px");
		t_idioma.setHeight("-1px");
		t_idioma.setValue("Idioma:");
		gridLayout_1.addComponent(t_idioma, 0, 3);
		
		// l_idioma
		l_idioma = new Label();
		l_idioma.setImmediate(false);
		l_idioma.setWidth("100.0%");
		l_idioma.setHeight("100.0%");
		l_idioma.setValue("---");
		gridLayout_1.addComponent(l_idioma, 1, 3);
		
		// t_archivo
		t_archivo = new Label();
		t_archivo.setImmediate(false);
		t_archivo.setWidth("-1px");
		t_archivo.setHeight("-1px");
		t_archivo.setValue("Archivo:");
		gridLayout_1.addComponent(t_archivo, 0, 4);
		
		// l_archivo
		l_archivo = new Label();
		l_archivo.setImmediate(false);
		l_archivo.setWidth("100.0%");
		l_archivo.setHeight("100.0%");
		l_archivo.setValue("---");
		gridLayout_1.addComponent(l_archivo, 1, 4);
		
		// t_duracion
		t_duracion = new Label();
		t_duracion.setImmediate(false);
		t_duracion.setWidth("-1px");
		t_duracion.setHeight("-1px");
		t_duracion.setValue("Duración:");
		gridLayout_1.addComponent(t_duracion, 0, 5);
		
		// l_duracion
		l_duracion = new Label();
		l_duracion.setImmediate(false);
		l_duracion.setWidth("400px");
		l_duracion.setHeight("100.0%");
		l_duracion.setValue("---");
		gridLayout_1.addComponent(l_duracion, 1, 5);
		
		// t_descripcion
		t_descripcion = new Label();
		t_descripcion.setImmediate(false);
		t_descripcion.setWidth("-1px");
		t_descripcion.setHeight("-1px");
		t_descripcion.setValue("Descripción / Resumen:     ");
		gridLayout_1.addComponent(t_descripcion, 0, 6);
		
		// l_descripcion
		l_descripcion = new Label();
		l_descripcion.setImmediate(false);
		l_descripcion.setWidth("100.0%");
		l_descripcion.setHeight("100.0%");
		l_descripcion.setValue("---");
		gridLayout_1.addComponent(l_descripcion, 1, 6);
		
		return gridLayout_1;
	}

	@AutoGenerated
	private VerticalLayout buildVl_Comentarios() {
		// common part: create layout
		vl_Comentarios = new VerticalLayout();
		vl_Comentarios.setImmediate(false);
		vl_Comentarios.setWidth("100.0%");
		vl_Comentarios.setHeight("-1px");
		vl_Comentarios.setMargin(true);
		vl_Comentarios.setSpacing(true);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		vl_Comentarios.addComponent(horizontalLayout_1);
		
		// table_1
		table_1 = new Table();
		table_1.setImmediate(false);
		table_1.setWidth("100.0%");
		table_1.setHeight("-1px");
		vl_Comentarios.addComponent(table_1);
		vl_Comentarios.setExpandRatio(table_1, 1.0f);
		
		return vl_Comentarios;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// ta_Comentario
		ta_Comentario = new TextArea();
		ta_Comentario.setCaption("Nuevo Comentario");
		ta_Comentario.setImmediate(false);
		ta_Comentario.setWidth("100.0%");
		ta_Comentario.setHeight("-1px");
		horizontalLayout_1.addComponent(ta_Comentario);
		horizontalLayout_1.setExpandRatio(ta_Comentario, 1.0f);
		
		// b_addComentario
		b_addComentario = new Button();
		b_addComentario.setCaption("Publicar");
		b_addComentario.setImmediate(true);
		b_addComentario.setWidth("-1px");
		b_addComentario.setHeight("-1px");
		horizontalLayout_1.addComponent(b_addComentario);
		horizontalLayout_1.setComponentAlignment(b_addComentario, new Alignment(48));
		
		return horizontalLayout_1;
	}

}
