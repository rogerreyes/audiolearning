package com.ud.audiolearning.busquedas.ui;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.function.Consumer;

import org.bson.types.ObjectId;
import org.springframework.beans.factory.annotation.Autowired;
import org.vaadin.teemu.VaadinIcons;
import org.vaadin.virkki.carousel.HorizontalCarousel;

import com.ud.audiolearning.api.anotaciones.UIComponent;
import com.ud.audiolearning.api.domain.Audio;
import com.ud.audiolearning.api.domain.Imagen;
import com.ud.audiolearning.api.interfaces.AudioLearnUI;
import com.ud.audiolearning.busquedas.service.BusquedasService;
import com.ud.audiolearning.api.ui.AppSession;
import com.ud.audiolearning.api.ui.AudioCard;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.StreamResource;
import com.vaadin.server.StreamResource.StreamSource;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TabSheet.SelectedTabChangeEvent;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.ValoTheme;

import ru.xpoft.vaadin.VaadinView;

@SuppressWarnings("serial")
@UIComponent
@VaadinView("inicio")
public class Inicio extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private TabSheet tabSheet_1;
	@AutoGenerated
	private VerticalLayout vl_favoritos;
	@AutoGenerated
	private Table table_1;
	@AutoGenerated
	private VerticalLayout vl_contenido;
	@Autowired
	BusquedasService busquedasService;
	private BeanItemContainer<Audio> BICFavoritos;

	public Inicio() {
	}

	@Override
	public void enter(ViewChangeEvent event) {
		AudioLearnUI audioLearning = (AudioLearnUI) UI.getCurrent();
		audioLearning.getPrivateUI().getAreaContenido().setHeight("-1px");
		buildMainLayout();
		setCompositionRoot(mainLayout);
		init();
		style();
	}

	public void init() {

		

		tabSheet_1.addSelectedTabChangeListener(e -> cambioTab(e));

		AppSession.getUser().getCategorias().forEach(categoria -> {

			HorizontalCarousel carousel = new HorizontalCarousel();
			carousel.setMouseDragEnabled(false);
			carousel.setMouseWheelEnabled(false);
			carousel.setWidth("100%");
			carousel.setHeight("300px");
			carousel.addStyleName("carousel");

			List<Audio> a = busquedasService.findAudiosByCategoria(categoria.getId());

			if (a.size() <= 5) {
				HorizontalLayout hl = new HorizontalLayout();
				hl.setSpacing(true);
				hl.setWidth("100%");
				hl.setMargin(new MarginInfo(false, true, false, true));
				a.forEach(audio -> {
					hl.addComponent(new AudioCard(audio, busquedasService, false));
				});
				int restantes = 5 - a.size();
				for (int i = 0; i < restantes; i++) {
					hl.addComponent(new AudioCard(null, busquedasService, false));
				}
				carousel.addComponent(hl);
			} else {
				HorizontalLayout hl = new HorizontalLayout();
				hl.setSpacing(true);
				hl.setWidth("100%");
				hl.setMargin(new MarginInfo(false, true, false, true));
				a.subList(0, 5).forEach(audio -> {
					hl.addComponent(new AudioCard(audio, busquedasService, false));
				});
				HorizontalLayout hl2 = new HorizontalLayout();
				hl2.setSpacing(true);
				hl2.setWidth("100%");
				hl2.setMargin(new MarginInfo(false, true, false, true));
				a.subList(5, a.size()).forEach(audio -> {
					hl2.addComponent(new AudioCard(audio, busquedasService, false));
				});
				carousel.addComponents(hl, hl2);

				int restantes = 10 - a.size();

				for (int i = 0; i < restantes; i++) {
					hl2.addComponent(new AudioCard(null, busquedasService, false));
				}

			}

			Label tituloCategoria = new Label(categoria.getNombre().toUpperCase());
			tituloCategoria.addStyleName("tituloCategoria");

			vl_contenido.addComponent(tituloCategoria);
			vl_contenido.addComponent(carousel);

		});

	}


	


	private void cambioTab(SelectedTabChangeEvent e) {
		if (tabSheet_1.getSelectedTab().getCaption().equals("Favoritos")) {
			UI.getCurrent().getNavigator().navigateTo("favoritos");
		}
	}

	
	private void style() {

		tabSheet_1.getTab(0).setIcon(VaadinIcons.HOME);
		tabSheet_1.getTab(1).setIcon(VaadinIcons.HEART);
		vl_contenido.setMargin(new MarginInfo(true, false, true, false));
		vl_favoritos.setMargin(new MarginInfo(true, false, true, false));
		mainLayout.setMargin(new MarginInfo(true, false, true, false));
		tabSheet_1.addStyleName(ValoTheme.TABSHEET_CENTERED_TABS);
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");

		// tabSheet_1
		tabSheet_1 = buildTabSheet_1();
		mainLayout.addComponent(tabSheet_1);

		return mainLayout;
	}

	@AutoGenerated
	private TabSheet buildTabSheet_1() {
		// common part: create layout
		tabSheet_1 = new TabSheet();
		tabSheet_1.setImmediate(true);
		tabSheet_1.setWidth("100.0%");
		tabSheet_1.setHeight("-1px");

		// vl_contenido
		vl_contenido = new VerticalLayout();
		vl_contenido.setCaption("Principal");
		vl_contenido.setImmediate(false);
		vl_contenido.setWidth("100.0%");
		vl_contenido.setHeight("-1px");
		vl_contenido.setMargin(false);
		tabSheet_1.addTab(vl_contenido, "Pagina Principal", null);

		// vl_favoritos
		vl_favoritos = buildVl_favoritos();
		tabSheet_1.addTab(vl_favoritos, "Favoritos", null);

		return tabSheet_1;
	}

	@AutoGenerated
	private VerticalLayout buildVl_favoritos() {
		// common part: create layout
		vl_favoritos = new VerticalLayout();
		vl_favoritos.setCaption("Favoritos");
		vl_favoritos.setImmediate(true);
		vl_favoritos.setWidth("100.0%");
		vl_favoritos.setHeight("-1px");
		vl_favoritos.setMargin(false);

		// table_1
		table_1 = new Table();
		table_1.setImmediate(false);
		table_1.setWidth("100.0%");
		table_1.setHeight("-1px");
		vl_favoritos.addComponent(table_1);

		return vl_favoritos;
	}

}
