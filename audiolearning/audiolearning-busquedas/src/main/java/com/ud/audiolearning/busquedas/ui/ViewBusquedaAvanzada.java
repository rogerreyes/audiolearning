package com.ud.audiolearning.busquedas.ui;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.bson.types.ObjectId;
import org.vaadin.teemu.VaadinIcons;

import com.ud.audiolearning.api.domain.Categoria;
import com.ud.audiolearning.api.domain.CriterioBusqueda;
import com.ud.audiolearning.api.domain.Parametrico;
import com.ud.audiolearning.api.service.ApiService;
import com.ud.audiolearning.api.ui.AppSession;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.shared.ui.datefield.Resolution;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.SelectionMode;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.ValoTheme;

@SuppressWarnings("serial")
public class ViewBusquedaAvanzada extends CustomComponent implements Serializable {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Button b_buscar;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Panel p_genero;
	@AutoGenerated
	private VerticalLayout vl_genero;
	@AutoGenerated
	private Panel panel_categorias;
	@AutoGenerated
	private VerticalLayout vl_categorias;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private PopupDateField df_fechaFinal;
	@AutoGenerated
	private PopupDateField df_fechaInicial;
	@AutoGenerated
	private TextField tf_titulo;
	@AutoGenerated
	private TextField tf_usuario;
	@AutoGenerated
	private ComboBox cb_idioma;
	@AutoGenerated
	private Label l_titulo;
	private ApiService apiService;

	private BeanItemContainer<Categoria> BICCategoria;
	private Grid gridCategorias;
	private BeanItemContainer<Parametrico> BICGeneros;
	private Grid gridGeneros;

	public ViewBusquedaAvanzada(ApiService apiService) {
		this.apiService = apiService;

		buildMainLayout();
		setCompositionRoot(mainLayout);

		style();
		init();

	}

	private void init() {

		b_buscar.addClickListener(e -> buscar(e));
		gridCategorias = new Grid();
		gridCategorias.setHeight("180px");
		gridGeneros = new Grid();
		gridGeneros.setHeight("180px");


		vl_categorias.addComponent(gridCategorias);
		vl_genero.addComponent(gridGeneros);

		llenarImputs();

	}

	private void llenarImputs() {
		
		String formatoFecha = "yyyy-MM-dd hh:mm:ss";

		tf_usuario.setNullRepresentation("");
		tf_titulo.setNullRepresentation("");

		BeanContainer<String, Parametrico> BIIdioma = new BeanContainer<>(Parametrico.class);
		BIIdioma.setBeanIdProperty("codigo");
		BIIdioma.addAll(this.apiService.selectItemsIdiomas());
		cb_idioma.setContainerDataSource(BIIdioma);
		cb_idioma.setItemCaptionPropertyId("nombre");
		cb_idioma.setRequired(true);

		BICCategoria = new BeanItemContainer<>(Categoria.class);
		BICCategoria.addAll(apiService.findAllCategorias());
		gridCategorias.setContainerDataSource(BICCategoria);
		gridCategorias.setWidth("100%");
		gridCategorias.removeColumn("codigo");
		gridCategorias.removeColumn("id");
		gridCategorias.removeColumn("descripcion");
		Grid.Column bornColumn = gridCategorias.getColumn("nombre");
		bornColumn.setHeaderCaption("CATEGORIAS");
		gridCategorias.setSelectionMode(SelectionMode.MULTI);

		BICGeneros = new BeanItemContainer<>(Parametrico.class);
		BICGeneros.addAll(apiService.selectItemsGeneros());
		gridGeneros.setContainerDataSource(BICGeneros);
		gridGeneros.setWidth("100%");
		gridGeneros.removeColumn("codigo");
		gridGeneros.removeColumn("id");
		gridGeneros.removeColumn("tipo");
		gridGeneros.setSelectionMode(SelectionMode.MULTI);
		
		df_fechaInicial.setDateFormat(formatoFecha);
		df_fechaFinal.setResolution(Resolution.SECOND);

	}

	private void buscar(ClickEvent e) {
		
		
		CriterioBusqueda criterioBusqueda = new CriterioBusqueda();
		criterioBusqueda.setTipo("A");
		String idioma = cb_idioma.getValue()==null?null:String.valueOf(cb_idioma.getValue()); 
		criterioBusqueda.setIdioma(idioma);
		
		String Usuario = tf_usuario.getValue().trim().equals("")?null:tf_usuario.getValue().trim();
		criterioBusqueda.setUsuario(Usuario);
//		criterioBusqueda.setEtiqueta(tf_etiquetas.getValue());
		criterioBusqueda.setFechaInicial(df_fechaInicial.getValue());
		criterioBusqueda.setFechafinal(df_fechaFinal.getValue());
		
		
		if(gridCategorias.getSelectedRows().size()>0){
			List<ObjectId> categorias = new ArrayList<ObjectId>();
			gridCategorias.getSelectedRows().forEach(item-> {Categoria c = (Categoria) item; categorias.add(c.getId());});
			criterioBusqueda.setCategorias(categorias);
		}
		
		if(gridGeneros.getSelectedRows().size()>0){
			List<String> generos = new ArrayList<String>();
			gridGeneros.getSelectedRows().forEach(item-> {Parametrico genero = (Parametrico) item; generos.add(genero.getCodigo());});
			criterioBusqueda.setGeneros(generos);
		}
		
		
		
		AppSession.setCriterioBusqueda(criterioBusqueda);
		
		UI.getCurrent().getNavigator().navigateTo("Busqueda");
		
		
		UI.getCurrent().getWindows().forEach(window -> window.close());
		
	}

	private void style() {

		b_buscar.addStyleName(ValoTheme.BUTTON_PRIMARY);
		l_titulo.addStyleName(ValoTheme.LABEL_BOLD);
		l_titulo.addStyleName(ValoTheme.LABEL_COLORED);
		l_titulo.addStyleName(ValoTheme.LABEL_H2);
		b_buscar.setIcon(VaadinIcons.SEARCH);

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// l_titulo
		l_titulo = new Label();
		l_titulo.setStyleName("mih2");
		l_titulo.setImmediate(false);
		l_titulo.setWidth("100.0%");
		l_titulo.setHeight("-1px");
		l_titulo.setValue("Busqueda Avanzada");
		mainLayout.addComponent(l_titulo);
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		mainLayout.addComponent(gridLayout_1);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		// b_buscar
		b_buscar = new Button();
		b_buscar.setCaption("Buscar Audios");
		b_buscar.setImmediate(true);
		b_buscar.setWidth("-1px");
		b_buscar.setHeight("-1px");
		mainLayout.addComponent(b_buscar);
		mainLayout.setComponentAlignment(b_buscar, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(false);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(3);
		gridLayout_1.setRows(2);
		
		// cb_idioma
		cb_idioma = new ComboBox();
		cb_idioma.setCaption("Idioma");
		cb_idioma.setImmediate(false);
		cb_idioma.setWidth("90.0%");
		cb_idioma.setHeight("-1px");
		gridLayout_1.addComponent(cb_idioma, 0, 0);
		
		// tf_usuario
		tf_usuario = new TextField();
		tf_usuario.setCaption("Usuario");
		tf_usuario.setImmediate(false);
		tf_usuario.setWidth("90.0%");
		tf_usuario.setHeight("-1px");
		gridLayout_1.addComponent(tf_usuario, 1, 0);
		
		// tf_titulo
		tf_titulo = new TextField();
		tf_titulo.setCaption("Titulo");
		tf_titulo.setImmediate(false);
		tf_titulo.setWidth("90.0%");
		tf_titulo.setHeight("-1px");
		gridLayout_1.addComponent(tf_titulo, 2, 0);
		
		// df_fechaInicial
		df_fechaInicial = new PopupDateField();
		df_fechaInicial.setCaption("Desde");
		df_fechaInicial.setImmediate(false);
		df_fechaInicial.setWidth("90.0%");
		df_fechaInicial.setHeight("-1px");
		gridLayout_1.addComponent(df_fechaInicial, 0, 1);
		
		// df_fechaFinal
		df_fechaFinal = new PopupDateField();
		df_fechaFinal.setCaption("Hasta");
		df_fechaFinal.setImmediate(false);
		df_fechaFinal.setWidth("90.0%");
		df_fechaFinal.setHeight("-1px");
		gridLayout_1.addComponent(df_fechaFinal, 1, 1);
		
		return gridLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// panel_categorias
		panel_categorias = buildPanel_categorias();
		horizontalLayout_1.addComponent(panel_categorias);
		
		// p_genero
		p_genero = buildP_genero();
		horizontalLayout_1.addComponent(p_genero);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private Panel buildPanel_categorias() {
		// common part: create layout
		panel_categorias = new Panel();
		panel_categorias.setCaption("Categorias");
		panel_categorias.setImmediate(false);
		panel_categorias.setWidth("100.0%");
		panel_categorias.setHeight("-1px");
		
		// vl_categorias
		vl_categorias = new VerticalLayout();
		vl_categorias.setImmediate(false);
		vl_categorias.setWidth("100.0%");
		vl_categorias.setHeight("-1px");
		vl_categorias.setMargin(false);
		vl_categorias.setSpacing(true);
		panel_categorias.setContent(vl_categorias);
		
		return panel_categorias;
	}

	@AutoGenerated
	private Panel buildP_genero() {
		// common part: create layout
		p_genero = new Panel();
		p_genero.setCaption("Generos");
		p_genero.setImmediate(false);
		p_genero.setWidth("100.0%");
		p_genero.setHeight("-1px");
		
		// vl_genero
		vl_genero = new VerticalLayout();
		vl_genero.setImmediate(false);
		vl_genero.setWidth("100.0%");
		vl_genero.setHeight("100.0%");
		vl_genero.setMargin(false);
		p_genero.setContent(vl_genero);
		
		return p_genero;
	}

}
