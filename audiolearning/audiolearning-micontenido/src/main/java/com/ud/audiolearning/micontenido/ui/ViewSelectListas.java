package com.ud.audiolearning.micontenido.ui;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;
import org.vaadin.teemu.VaadinIcons;

import com.ud.audiolearning.api.domain.ListaDifusion;
import com.ud.audiolearning.api.service.ApiService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.SelectionMode;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.ValoTheme;

@SuppressWarnings("serial")
public class ViewSelectListas extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Button b_seleccionarListas;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	private ApiService apiService;
	private List<ListaDifusion> lDifusionActual;
	private Consumer<List<ListaDifusion>> consumer;
	private Grid grid;
	private BeanItemContainer<ListaDifusion> BICListas;

	public ViewSelectListas(List<ListaDifusion> list, ApiService apiService,
			Consumer<List<ListaDifusion>> listasDifusionConsumer) {
		this.apiService = apiService;
		this.lDifusionActual = list;
		this.consumer = listasDifusionConsumer;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		init();
		Style();

	}

	private void init() {

		grid = new Grid();
		BICListas = new BeanItemContainer<ListaDifusion>(ListaDifusion.class);
		BICListas.addAll(apiService.findAllListasDifusion());
		grid.setContainerDataSource(BICListas);
		grid.setHeight("200px");
		grid.setWidth("100%");
		grid.removeColumn("estado");
		grid.removeColumn("id");
		grid.removeColumn("descripcion");
		grid.removeColumn("audios");
		grid.removeColumn("usuario");

		Grid.Column nombreColum = grid.getColumn("titulo");
		nombreColum.setHeaderCaption("LISTA DE DIFUSION");

		Grid.Column fechaColum = grid.getColumn("fechaCreacion");
		fechaColum.setHeaderCaption("FECHA CREACION");

		grid.setSelectionMode(SelectionMode.MULTI);
		verticalLayout_2.addComponent(grid);
		b_seleccionarListas.addClickListener(e -> seleccionarListas(e));

		for (ListaDifusion lista : lDifusionActual) {
			try {
				grid.select(lista);
			} catch (Exception e2) {
				System.err.println("ERROR EN LA LISTA " + lista);
			}
		}
	}

	private void seleccionarListas(ClickEvent e) {
		List<ListaDifusion> ld = new ArrayList<>();
		for (Object lista : grid.getSelectedRows()) {
			ListaDifusion listaD = (ListaDifusion) lista;
			ld.add(listaD);
		}
		consumer.accept(ld);
		UI.getCurrent().removeWindow((Window) this.getParent());

	}

	private void Style() {
		grid.addStyleName("myGrid");
		b_seleccionarListas.addStyleName(ValoTheme.BUTTON_PRIMARY);
		b_seleccionarListas.setIcon(VaadinIcons.CHECK);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("550px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("550px");
		setHeight("-1px");

		// verticalLayout_2
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		mainLayout.addComponent(verticalLayout_2);

		// b_seleccionarListas
		b_seleccionarListas = new Button();
		b_seleccionarListas.setCaption("Seleccionar");
		b_seleccionarListas.setImmediate(true);
		b_seleccionarListas.setWidth("-1px");
		b_seleccionarListas.setHeight("-1px");
		mainLayout.addComponent(b_seleccionarListas);
		mainLayout.setComponentAlignment(b_seleccionarListas, new Alignment(48));

		return mainLayout;
	}

}
