package com.ud.audiolearning.micontenido.ui;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;

import org.vaadin.teemu.VaadinIcons;

import com.ud.audiolearning.api.domain.Categoria;
import com.ud.audiolearning.api.service.ApiService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.SelectionMode;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.ValoTheme;

@SuppressWarnings("serial")
public class ViewSelectCategorias extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Button b_addCategoria;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	private List<Categoria> categoriasActual;

	private Grid grid;

	ApiService apiService;

	private BeanItemContainer<Categoria> BICCategoria;

	private Consumer<List<Categoria>> consumer;

	public ViewSelectCategorias(List<Categoria> list, ApiService apiService, Consumer<List<Categoria>> userConsumer) {
		this.apiService = apiService;
		this.categoriasActual = list;
		this.consumer = userConsumer;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		init();
		style();
	}

	private void init() {

		grid = new Grid();
		BICCategoria = new BeanItemContainer<>(Categoria.class);
		BICCategoria.addAll(apiService.findAllCategorias());
		grid.setContainerDataSource(BICCategoria);
		grid.setHeight("200px");
		grid.setWidth("100%");
		grid.removeColumn("codigo");
		grid.removeColumn("id");
		grid.removeColumn("descripcion");

		Grid.Column bornColumn = grid.getColumn("nombre");
		bornColumn.setHeaderCaption("CATEGORIAS");

		grid.setSelectionMode(SelectionMode.MULTI);
		verticalLayout_2.addComponent(grid);
		b_addCategoria.addClickListener(e -> addCategorias(e));

		for (Categoria categoria : categoriasActual) {
			try {
				grid.select(categoria);
			} catch (Exception e2) {
				System.err.println("ERROR EN LA CATEGORIA " + categoria);
			}
		}

	}

	private void style() {

		grid.addStyleName("myGrid");
		b_addCategoria.addStyleName(ValoTheme.BUTTON_PRIMARY);
		b_addCategoria.setIcon(VaadinIcons.CHECK);
	}

	private void addCategorias(ClickEvent e) {
		List<Categoria> lc = new ArrayList<>();
		for (Object categoria : grid.getSelectedRows()) {
			Categoria newCategoria = (Categoria) categoria;
			lc.add(newCategoria);
		}
		consumer.accept(lc);
		UI.getCurrent().removeWindow((Window) this.getParent());
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("550px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("550px");
		setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		mainLayout.addComponent(verticalLayout_2);
		
		// b_addCategoria
		b_addCategoria = new Button();
		b_addCategoria.setCaption("Seleccionar");
		b_addCategoria.setImmediate(true);
		b_addCategoria.setWidth("-1px");
		b_addCategoria.setHeight("-1px");
		mainLayout.addComponent(b_addCategoria);
		mainLayout.setComponentAlignment(b_addCategoria, new Alignment(48));
		
		return mainLayout;
	}

}
