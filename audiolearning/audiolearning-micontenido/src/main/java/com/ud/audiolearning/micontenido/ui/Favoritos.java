package com.ud.audiolearning.micontenido.ui;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.function.Consumer;

import org.bson.types.ObjectId;
import org.springframework.beans.factory.annotation.Autowired;
import org.vaadin.dialogs.ConfirmDialog;
import org.vaadin.teemu.VaadinIcons;

import com.ud.audiolearning.api.anotaciones.UIComponent;
import com.ud.audiolearning.api.interfaces.AudioLearnUI;
import com.ud.audiolearning.api.domain.Audio;
import com.ud.audiolearning.api.ui.AppSession;
import com.ud.audiolearning.micontenido.service.MiContenidoService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.StreamResource;
import com.vaadin.server.StreamResource.StreamSource;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.Align;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.ValoTheme;

import ru.xpoft.vaadin.VaadinView;

@SuppressWarnings("serial")
@UIComponent
@VaadinView("favoritos")
public class Favoritos extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout vl_contenido;
	@AutoGenerated
	private Table table_1;
	@AutoGenerated
	private HorizontalLayout hl_cabecera;
	@AutoGenerated
	private Label l_titulo;
//	private BeanItemContainer<Audio> BICAudios;

	@Autowired
	MiContenidoService miContenidoService;
	private BeanItemContainer<Audio> BICFavoritos;

	public Favoritos() {

	}

	@Override
	public void enter(ViewChangeEvent event) {

		AudioLearnUI audioLearning = (AudioLearnUI) UI.getCurrent();
		audioLearning.getPrivateUI().getAreaContenido().setHeight("-1px");

		buildMainLayout();
		setCompositionRoot(mainLayout);
		init();
		style();
	}

	private void init() {

		BICFavoritos = new BeanItemContainer<Audio>(Audio.class);
		BICFavoritos.addNestedContainerBean("usuario");
		table_1.setContainerDataSource(BICFavoritos);
		table_1.addGeneratedColumn("imagen", this::construirImagen);
		table_1.addGeneratedColumn("botones", this::construirBotones);
		table_1.setVisibleColumns("imagen", "titulo", "usuario.nombres", "botones");
		table_1.setColumnHeaders("", "TITULO", "AUTOR", "");
		table_1.setColumnWidth("imagen", 60);
		table_1.setColumnAlignment("botones", Align.CENTER);
		table_1.setColumnAlignment("usuario.nombres", Align.CENTER);

		llenarFavoritos(null);

	}

	private Object construirImagen(Table source, Object itemId, Object columnId) {
		Audio audio = (Audio) itemId;

		Embedded imagen = new Embedded();
		imagen.setWidth("50px");
		imagen.setHeight("50px");
		if (audio.getImagen().getBinaryData() != null) {

			imagen.setSource(new StreamResource(new StreamSource() {

				@Override
				public InputStream getStream() {

					return new BufferedInputStream(
							new ByteArrayInputStream(audio.getImagen().getBinaryData().getData()));
				}
			}, audio.getImagen().getNombre()));

			return imagen;
		}
		imagen.setSource(
				new ExternalResource("http://icons.iconarchive.com/icons/alecive/flatwoken/48/Apps-Favorite-icon.png"));
		return imagen;
	}

	private Object construirBotones(Table source, Object itemId, Object columnId) {
		Audio audio = (Audio) itemId;
		HorizontalLayout hl = new HorizontalLayout();
		hl.addStyleName("botonesMultimedia");
		hl.setSpacing(true);
		hl.setWidth("-1px");
		Button buttonPlay = new Button();
		buttonPlay.addClickListener(e -> play(audio.getId()));
		buttonPlay.setIcon(VaadinIcons.PLAY);

		Button buttonRemove = new Button();
		buttonRemove.addClickListener(e -> Remove(audio));
		buttonRemove.setIcon(VaadinIcons.TRASH);
		hl.addComponents(buttonPlay, buttonRemove);

		return hl;
	}

	private void Remove(Audio audio) {

		ConfirmDialog.show(UI.getCurrent(), "Remover de Favoritos:",
				"Esta seguro que desea remover el audio " + audio.getTitulo() + " de sus favoritos?", "Remover",
				"No Remover", new ConfirmDialog.Listener() {

					public void onClose(ConfirmDialog dialog) {
						if (dialog.isConfirmed()) {
							miContenidoService.removerFavorito(audio.getId(), llenarFavoritos);
						} else {
						}
					}
				});

	}

	private void play(ObjectId objectId) {
		getUI().getNavigator().navigateTo("reproductor/" + objectId);
	}

	public Consumer<String> llenarFavoritos = (valor) -> llenarFavoritos(valor);

	private void llenarFavoritos(String valor) {
		BICFavoritos.removeAllItems();
		BICFavoritos.addAll(miContenidoService.consultarFavoritos(AppSession.getUser().getId().toString()));
	}

	private void style() {

		l_titulo.addStyleName(ValoTheme.LABEL_COLORED);
		l_titulo.addStyleName(ValoTheme.LABEL_H2);
		l_titulo.addStyleName(ValoTheme.LABEL_BOLD);
		table_1.addStyleName(ValoTheme.TABLE_NO_VERTICAL_LINES);
		table_1.addStyleName(ValoTheme.TABLE_BORDERLESS);
		table_1.addStyleName("orangeHeader");

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setStyleName("contenido");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");

		// hl_cabecera
		hl_cabecera = buildHl_cabecera();
		mainLayout.addComponent(hl_cabecera);

		// vl_contenido
		vl_contenido = buildVl_contenido();
		mainLayout.addComponent(vl_contenido);

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHl_cabecera() {
		// common part: create layout
		hl_cabecera = new HorizontalLayout();
		hl_cabecera.setStyleName("cabeceraContenido");
		hl_cabecera.setImmediate(false);
		hl_cabecera.setWidth("100.0%");
		hl_cabecera.setHeight("-1px");
		hl_cabecera.setMargin(false);

		// l_titulo
		l_titulo = new Label();
		l_titulo.setImmediate(false);
		l_titulo.setWidth("-1px");
		l_titulo.setHeight("-1px");
		l_titulo.setValue("Favoritos");
		hl_cabecera.addComponent(l_titulo);

		return hl_cabecera;
	}

	@AutoGenerated
	private VerticalLayout buildVl_contenido() {
		// common part: create layout
		vl_contenido = new VerticalLayout();
		vl_contenido.setImmediate(false);
		vl_contenido.setWidth("100.0%");
		vl_contenido.setHeight("-1px");
		vl_contenido.setMargin(false);

		// table_1
		table_1 = new Table();
		table_1.setImmediate(false);
		table_1.setWidth("100.0%");
		table_1.setHeight("-1px");
		vl_contenido.addComponent(table_1);

		return vl_contenido;
	}

}
